Terminals unused in grammar

   MAIN


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: %empty
    3          | function functions

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 ident: IDENT

    6 function_ident: FUNCTION ident

    7 declarations: %empty
    8             | declaration SEMICOLON declarations

    9 declaration: IDENT COLON INTEGER
   10            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 statement: var ASSIGN expression
   12          | IF bool_exp THEN statements ENDIF
   13          | IF bool_exp THEN statements ELSE statements ENDIF
   14          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   15          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   16          | READ vars
   17          | WRITE vars
   18          | CONTINUE
   19          | RETURN expression

   20 statements: statement SEMICOLON
   21           | statement SEMICOLON statements

   22 expression: multiplicative_expression
   23           | multiplicative_expression ADD expression
   24           | multiplicative_expression SUB expression

   25 multiplicative_expression: term
   26                          | term MULT multiplicative_expression
   27                          | term DIV multiplicative_expression
   28                          | term MOD multiplicative_expression

   29 term: var
   30     | SUB var
   31     | NUMBER
   32     | SUB NUMBER
   33     | L_PAREN expression R_PAREN
   34     | SUB L_PAREN expression R_PAREN
   35     | ident L_PAREN expressions R_PAREN

   36 expressions: %empty
   37            | comma_sep_expressions

   38 comma_sep_expressions: expression
   39                      | expression COMMA comma_sep_expressions

   40 bool_exp: relation_and_exp
   41         | relation_and_exp OR bool_exp

   42 relation_and_exp: relation_exp
   43                 | relation_exp AND relation_and_exp

   44 relation_exp: expression comp expression
   45             | NOT expression comp expression
   46             | TRUE
   47             | NOT TRUE
   48             | FALSE
   49             | NOT FALSE
   50             | L_PAREN bool_exp R_PAREN
   51             | NOT L_PAREN bool_exp R_PAREN

   52 comp: EQ
   53     | NEQ
   54     | LT
   55     | GT
   56     | LTE
   57     | GTE

   58 var: ident
   59    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   60 vars: var
   61     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_PARAMS (258) 4
END_PARAMS (259) 4
BEGIN_LOCALS (260) 4
END_LOCALS (261) 4
BEGIN_BODY (262) 4
END_BODY (263) 4
FUNCTION (264) 6
RETURN (265) 19
MAIN (266)
L_SQUARE_BRACKET (267) 10 59
R_SQUARE_BRACKET (268) 10 59
INTEGER (269) 9 10
ARRAY (270) 10
OF (271) 10
IF (272) 12 13
THEN (273) 12 13
ENDIF (274) 12 13
ELSE (275) 13
WHILE (276) 14 15
DO (277) 15
BEGINLOOP (278) 14 15
ENDLOOP (279) 14 15
CONTINUE (280) 18
READ (281) 16
WRITE (282) 17
AND (283) 43
OR (284) 41
NOT (285) 45 47 49 51
TRUE (286) 46 47
FALSE (287) 48 49
SUB (288) 24 30 32 34
ADD (289) 23
MULT (290) 26
DIV (291) 27
MOD (292) 28
EQ (293) 52
NEQ (294) 53
LT (295) 54
GT (296) 55
LTE (297) 56
GTE (298) 57
SEMICOLON (299) 4 8 20 21
COLON (300) 9 10
COMMA (301) 39 61
L_PAREN (302) 33 34 35 50 51
R_PAREN (303) 33 34 35 50 51
ASSIGN (304) 11
NUMBER (305) 10 31 32
IDENT (306) 5 9 10


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1, on right: 0
functions (54)
    on left: 2 3, on right: 1 3
function (55)
    on left: 4, on right: 3
ident (56)
    on left: 5, on right: 6 35 58 59
function_ident (57)
    on left: 6, on right: 4
declarations (58)
    on left: 7 8, on right: 4 8
declaration (59)
    on left: 9 10, on right: 8
statement (60)
    on left: 11 12 13 14 15 16 17 18 19, on right: 20 21
statements (61)
    on left: 20 21, on right: 4 12 13 14 15 21
expression (62)
    on left: 22 23 24, on right: 11 19 23 24 33 34 38 39 44 45 59
multiplicative_expression (63)
    on left: 25 26 27 28, on right: 22 23 24 26 27 28
term (64)
    on left: 29 30 31 32 33 34 35, on right: 25 26 27 28
expressions (65)
    on left: 36 37, on right: 35
comma_sep_expressions (66)
    on left: 38 39, on right: 37 39
bool_exp (67)
    on left: 40 41, on right: 12 13 14 15 41 50 51
relation_and_exp (68)
    on left: 42 43, on right: 40 41 43
relation_exp (69)
    on left: 44 45 46 47 48 49 50 51, on right: 42 43
comp (70)
    on left: 52 53 54 55 56 57, on right: 44 45
var (71)
    on left: 58 59, on right: 11 29 30 60 61
vars (72)
    on left: 60 61, on right: 16 17 61


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    prog_start      go to state 2
    functions       go to state 3
    function        go to state 4
    function_ident  go to state 5


State 1

    6 function_ident: FUNCTION . ident

    IDENT  shift, and go to state 6

    ident  go to state 7


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 8


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions       go to state 9
    function        go to state 4
    function_ident  go to state 5


State 5

    4 function: function_ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 6

    5 ident: IDENT .

    $default  reduce using rule 5 (ident)


State 7

    6 function_ident: FUNCTION ident .

    $default  reduce using rule 6 (function_ident)


State 8

    0 $accept: prog_start $end .

    $default  accept


State 9

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 10

    4 function: function_ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: function_ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 13
    declaration   go to state 14


State 12

    9 declaration: IDENT . COLON INTEGER
   10            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 15


State 13

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 15

    9 declaration: IDENT COLON . INTEGER
   10            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 18
    ARRAY    shift, and go to state 19


State 16

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 17

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 21
    declaration   go to state 14


State 18

    9 declaration: IDENT COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 19

   10 declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 20

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 7 (declarations)

    declarations  go to state 23
    declaration   go to state 14


State 21

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 22

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 28


State 27

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    ident       go to state 36
    statement   go to state 37
    statements  go to state 38
    var         go to state 39


State 28

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 40


State 29

   19 statement: RETURN . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 45
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 30

   12 statement: IF . bool_exp THEN statements ENDIF
   13          | IF . bool_exp THEN statements ELSE statements ENDIF

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 53
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 54
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 31

   14 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 53
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 57
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 32

   15 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 58


State 33

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


State 34

   16 statement: READ . vars

    IDENT  shift, and go to state 6

    ident  go to state 36
    var    go to state 59
    vars   go to state 60


State 35

   17 statement: WRITE . vars

    IDENT  shift, and go to state 6

    ident  go to state 36
    var    go to state 59
    vars   go to state 61


State 36

   58 var: ident .
   59    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62

    $default  reduce using rule 58 (var)


State 37

   20 statements: statement . SEMICOLON
   21           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 63


State 38

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 64


State 39

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 65


State 40

   10 declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 41

   30 term: SUB . var
   32     | SUB . NUMBER
   34     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 66
    NUMBER   shift, and go to state 67
    IDENT    shift, and go to state 6

    ident  go to state 36
    var    go to state 68


State 42

   33 term: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 69
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 43

   31 term: NUMBER .

    $default  reduce using rule 31 (term)


State 44

   35 term: ident . L_PAREN expressions R_PAREN
   58 var: ident .
   59    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 62
    L_PAREN           shift, and go to state 70

    $default  reduce using rule 58 (var)


State 45

   19 statement: RETURN expression .

    $default  reduce using rule 19 (statement)


State 46

   22 expression: multiplicative_expression .
   23           | multiplicative_expression . ADD expression
   24           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 71
    ADD  shift, and go to state 72

    $default  reduce using rule 22 (expression)


State 47

   25 multiplicative_expression: term .
   26                          | term . MULT multiplicative_expression
   27                          | term . DIV multiplicative_expression
   28                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 73
    DIV   shift, and go to state 74
    MOD   shift, and go to state 75

    $default  reduce using rule 25 (multiplicative_expression)


State 48

   29 term: var .

    $default  reduce using rule 29 (term)


State 49

   45 relation_exp: NOT . expression comp expression
   47             | NOT . TRUE
   49             | NOT . FALSE
   51             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 76
    FALSE    shift, and go to state 77
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 78
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 79
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 50

   46 relation_exp: TRUE .

    $default  reduce using rule 46 (relation_exp)


State 51

   48 relation_exp: FALSE .

    $default  reduce using rule 48 (relation_exp)


State 52

   33 term: L_PAREN . expression R_PAREN
   50 relation_exp: L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 80
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 81
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 53

   44 relation_exp: expression . comp expression

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 88


State 54

   12 statement: IF bool_exp . THEN statements ENDIF
   13          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 89


State 55

   40 bool_exp: relation_and_exp .
   41         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 90

    $default  reduce using rule 40 (bool_exp)


State 56

   42 relation_and_exp: relation_exp .
   43                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 91

    $default  reduce using rule 42 (relation_and_exp)


State 57

   14 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 58

   15 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    ident       go to state 36
    statement   go to state 37
    statements  go to state 93
    var         go to state 39


State 59

   60 vars: var .
   61     | var . COMMA vars

    COMMA  shift, and go to state 94

    $default  reduce using rule 60 (vars)


State 60

   16 statement: READ vars .

    $default  reduce using rule 16 (statement)


State 61

   17 statement: WRITE vars .

    $default  reduce using rule 17 (statement)


State 62

   59 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 95
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 63

   20 statements: statement SEMICOLON .
   21           | statement SEMICOLON . statements

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    $default  reduce using rule 20 (statements)

    ident       go to state 36
    statement   go to state 37
    statements  go to state 96
    var         go to state 39


State 64

    4 function: function_ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 65

   11 statement: var ASSIGN . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 97
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 66

   34 term: SUB L_PAREN . expression R_PAREN

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 98
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 67

   32 term: SUB NUMBER .

    $default  reduce using rule 32 (term)


State 68

   30 term: SUB var .

    $default  reduce using rule 30 (term)


State 69

   33 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99


State 70

   35 term: ident L_PAREN . expressions R_PAREN

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    $default  reduce using rule 36 (expressions)

    ident                      go to state 44
    expression                 go to state 100
    multiplicative_expression  go to state 46
    term                       go to state 47
    expressions                go to state 101
    comma_sep_expressions      go to state 102
    var                        go to state 48


State 71

   24 expression: multiplicative_expression SUB . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 103
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 72

   23 expression: multiplicative_expression ADD . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 104
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 73

   26 multiplicative_expression: term MULT . multiplicative_expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    multiplicative_expression  go to state 105
    term                       go to state 47
    var                        go to state 48


State 74

   27 multiplicative_expression: term DIV . multiplicative_expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    multiplicative_expression  go to state 106
    term                       go to state 47
    var                        go to state 48


State 75

   28 multiplicative_expression: term MOD . multiplicative_expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    multiplicative_expression  go to state 107
    term                       go to state 47
    var                        go to state 48


State 76

   47 relation_exp: NOT TRUE .

    $default  reduce using rule 47 (relation_exp)


State 77

   49 relation_exp: NOT FALSE .

    $default  reduce using rule 49 (relation_exp)


State 78

   33 term: L_PAREN . expression R_PAREN
   51 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 80
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 108
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 79

   45 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 82
    NEQ  shift, and go to state 83
    LT   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 109


State 80

   33 term: L_PAREN expression . R_PAREN
   44 relation_exp: expression . comp expression

    EQ       shift, and go to state 82
    NEQ      shift, and go to state 83
    LT       shift, and go to state 84
    GT       shift, and go to state 85
    LTE      shift, and go to state 86
    GTE      shift, and go to state 87
    R_PAREN  shift, and go to state 99

    comp  go to state 88


State 81

   50 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 110


State 82

   52 comp: EQ .

    $default  reduce using rule 52 (comp)


State 83

   53 comp: NEQ .

    $default  reduce using rule 53 (comp)


State 84

   54 comp: LT .

    $default  reduce using rule 54 (comp)


State 85

   55 comp: GT .

    $default  reduce using rule 55 (comp)


State 86

   56 comp: LTE .

    $default  reduce using rule 56 (comp)


State 87

   57 comp: GTE .

    $default  reduce using rule 57 (comp)


State 88

   44 relation_exp: expression comp . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 111
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 89

   12 statement: IF bool_exp THEN . statements ENDIF
   13          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    ident       go to state 36
    statement   go to state 37
    statements  go to state 112
    var         go to state 39


State 90

   41 bool_exp: relation_and_exp OR . bool_exp

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 53
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 113
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 91

   43 relation_and_exp: relation_exp AND . relation_and_exp

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 53
    multiplicative_expression  go to state 46
    term                       go to state 47
    relation_and_exp           go to state 114
    relation_exp               go to state 56
    var                        go to state 48


State 92

   14 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    ident       go to state 36
    statement   go to state 37
    statements  go to state 115
    var         go to state 39


State 93

   15 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 116


State 94

   61 vars: var COMMA . vars

    IDENT  shift, and go to state 6

    ident  go to state 36
    var    go to state 59
    vars   go to state 117


State 95

   59 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 96

   21 statements: statement SEMICOLON statements .

    $default  reduce using rule 21 (statements)


State 97

   11 statement: var ASSIGN expression .

    $default  reduce using rule 11 (statement)


State 98

   34 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 119


State 99

   33 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 33 (term)


State 100

   38 comma_sep_expressions: expression .
   39                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 120

    $default  reduce using rule 38 (comma_sep_expressions)


State 101

   35 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 121


State 102

   37 expressions: comma_sep_expressions .

    $default  reduce using rule 37 (expressions)


State 103

   24 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 24 (expression)


State 104

   23 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 23 (expression)


State 105

   26 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 26 (multiplicative_expression)


State 106

   27 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 27 (multiplicative_expression)


State 107

   28 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 28 (multiplicative_expression)


State 108

   51 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 122


State 109

   45 relation_exp: NOT expression comp . expression

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 123
    multiplicative_expression  go to state 46
    term                       go to state 47
    var                        go to state 48


State 110

   50 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 50 (relation_exp)


State 111

   44 relation_exp: expression comp expression .

    $default  reduce using rule 44 (relation_exp)


State 112

   12 statement: IF bool_exp THEN statements . ENDIF
   13          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 124
    ELSE   shift, and go to state 125


State 113

   41 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 41 (bool_exp)


State 114

   43 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 43 (relation_and_exp)


State 115

   14 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 116

   15 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 127


State 117

   61 vars: var COMMA vars .

    $default  reduce using rule 61 (vars)


State 118

   59 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 59 (var)


State 119

   34 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 34 (term)


State 120

   39 comma_sep_expressions: expression COMMA . comma_sep_expressions

    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 42
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 100
    multiplicative_expression  go to state 46
    term                       go to state 47
    comma_sep_expressions      go to state 128
    var                        go to state 48


State 121

   35 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 35 (term)


State 122

   51 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 51 (relation_exp)


State 123

   45 relation_exp: NOT expression comp expression .

    $default  reduce using rule 45 (relation_exp)


State 124

   12 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 12 (statement)


State 125

   13 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    IDENT     shift, and go to state 6

    ident       go to state 36
    statement   go to state 37
    statements  go to state 129
    var         go to state 39


State 126

   14 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 14 (statement)


State 127

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 49
    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    SUB      shift, and go to state 41
    L_PAREN  shift, and go to state 52
    NUMBER   shift, and go to state 43
    IDENT    shift, and go to state 6

    ident                      go to state 44
    expression                 go to state 53
    multiplicative_expression  go to state 46
    term                       go to state 47
    bool_exp                   go to state 130
    relation_and_exp           go to state 55
    relation_exp               go to state 56
    var                        go to state 48


State 128

   39 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 39 (comma_sep_expressions)


State 129

   13 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 131


State 130

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 15 (statement)


State 131

   13 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 13 (statement)
